name: ghcr-release
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
env:
  REGISTRY_IMAGE_NAME: ghcr.io/${{ github.repository }}
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version:
          - graalvm
          - jvm
        platform:
          - linux/amd64
          # - linux/arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Setup variables
        id: setup
        run: |
          platform=${{ matrix.platform }}
          echo "platform=${platform//\//-}" >> $GITHUB_OUTPUT          

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE_NAME }}
          tags: type=raw,value=${{ matrix.version }}-{{date 'YYYYMMDDhhmm'}}-{{sha}}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        id: build
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          file: Dockerfile.${{ matrix.version }}
          platforms: ${{ matrix.platform }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE_NAME }},push-by-digest=true,name-canonical=true,push=true
          labels: ${{ steps.metadata.outputs.labels }}

      - name: Export digest
        run: |
          mkdir -p /tmp/digests/
          digest="${{ steps.build.outputs.digest }}"
          echo "${digest#sha256:}" > "/tmp/digests/${{ matrix.version }}-${{ steps.setup.outputs.platform }}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.version }}-${{ steps.setup.outputs.platform }}
          path: /tmp/digests/**
          if-no-files-found: error
          retention-days: 1
#
#      - name: Attest
#        uses: actions/attest-build-provenance@v1
#        id: attest
#        with:
#          subject-name: ${{ env.REGISTRY_IMAGE_NAME }}
#          subject-digest: ${{ steps.push.outputs.digest }}
#          push-to-registry: true

  push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version:
          - graalvm
          - jvm
    permissions:
      packages: write
      contents: read
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-${{ matrix.version }}-*
          merge-multiple: true

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE_NAME }}
          tags: type=raw,value=${{ matrix.version }}-{{date 'YYYYMMDDhhmm'}}-{{sha}}

      - name: Log in to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }} 
          
      - name: Create manifest list & push
        working-directory: /tmp/digests
        run: |
          ls -lsah
          digests=""
          for digest_file in "${{ matrix.version }}"-*; do
            digest=$(cat "$digest_file")
            digests="$digests ${{ env.REGISTRY_IMAGE_NAME }}@${digest}"
          done

          tags=$(jq -r '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON"

          echo "$digests"
          echo "$tags"

          # Use the tags in the manifest list creation
          # docker buildx imagetools create $tags $digests